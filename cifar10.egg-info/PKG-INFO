Metadata-Version: 2.1
Name: cifar10
Version: 1.0.1
Summary: UNKNOWN
Home-page: https://github.com/joeyism/cifar10
Author: joeyism
Author-email: joeyism@gmail.com
License: UNKNOWN
Download-URL: https://github.com/joeyism/cifar10/archive/1.0.1.tar.gz
Description: # CIFAR 10 Dataset Library
        This library was created to allow an easy usage of [CIFAR 10 DATA](https://www.cs.toronto.edu/~kriz/cifar.html). This is a wrapper around the instructions given on the [CIFAR 10 Site](https://www.cs.toronto.edu/~kriz/cifar.html)
        
        ## Installation
        ```bash
        pip3 install cifar10
        ```
        
        ## Sample Usage
        ```python
        import cifar10
        
        # Train data
        for image, label in cifar10.data_batch_generator():
            image # numpy array of an image, which is of shape 32 x 32 x 3
            label # integer value of the image label
        
        # Test data
        for image, label in cifar10.test_batch_generator():
            image # numpy array of an image, which is of shape 32 x 32 x 3
            label # integer value of the image label
        ```
        
        ## API
        
        ### data_batch_generator
        Returns a generator of each image and label pair for data batch
        ```python
        data_batch_generator(cache_location: str=".") -> Iterator[Tuple[np.array, int]]
        ```
        #### parameters
        * `cache_location` (default: library folder location): where to cache the cifar10 data
        
        ### test_batch_generator
        Returns a generator of each image and label pair for test batch
        ```python
        test_batch_generator(cache_location: str=".") -> Iterator[Tuple[np.array, int]]
        ```
        #### parameters
        * `cache_location` (default: library folder location): where to cache the cifar10 data
        
        ### meta
        Returns the raw meta file
        ```python
        meta(cache_location: str=".") -> Dict[bytes, Any]
        ```
        #### parameters
        * `cache_location` (default: library folder location): where to cache the cifar10 data
        
        ### image_label_map
        Returns a dictionary of label
        ```
        {
            0: 'airplane',
            1: 'automobile',
            ...
        }
        ```
        
        ```python
        image_label_map(cache_location: str=".") -> Dict[int, str]
        ```
        #### parameters
        * `cache_location` (default: library folder location): where to cache the cifar10 data
        
Keywords: cifar,cifar10,ten,10,machine,learning,database
Platform: UNKNOWN
Description-Content-Type: text/markdown
